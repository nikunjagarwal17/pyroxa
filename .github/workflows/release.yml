name: Build and Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-and-publish:
    name: Build and Publish PyroXa to PyPI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine wheel setuptools
    
    - name: Build wheel and source distribution
      run: |
        echo "Building PyroXa - Pure Python Chemical Kinetics Library"
        python -m build
    
    - name: List distribution files
      run: |
        echo "Distribution files created:"
        ls -lh dist/
    
    - name: Test installation from wheel
      run: |
        pip install dist/*.whl
        python -c "import pyroxa; print(f'PyroXa v{pyroxa.__version__} installed successfully')"
        python -c "import pyroxa; k = pyroxa.arrhenius_rate(A=1e10, Ea=50000, T=298.15); print(f'Arrhenius rate test: k={k:.2e}')"
    
    - name: Test core functions
      run: |
        python -c "
        import pyroxa
        
        # Test batch reactor time calculation
        time = pyroxa.batch_reactor_time(initial_conc=1.0, final_conc=0.2, rate_constant=0.15, order=1)
        print(f'Batch reactor time: {time:.2f} time units')
        assert time > 0
        
        # Test CSTR volume calculation
        volume = pyroxa.cstr_volume(flow_rate=10.0, rate_constant=0.5, conversion=0.8, order=1)
        print(f'CSTR volume: {volume:.2f} volume units')
        assert volume > 0
        
        # Test heat capacity
        cp = pyroxa.heat_capacity_nasa(T=500.0, coeffs=[3.298677, 0.0014082404, -3.963222e-06, 5.641515e-09, -2.444854e-12])
        print(f'Heat capacity: {cp:.2f} J/mol/K')
        assert cp > 0
        
        print('All core function tests passed!')
        "
    
    - name: Check distribution with twine
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pyroxa-dist
        path: dist/
        retention-days: 90
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true
        verbose: true
